@model QsAdmin.Models.Customer

@{
    ViewBag.Title = "取引先管理";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>取引先管理 <small>編集</small></h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CustomerId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerShortName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.CustomerShortName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CustomerShortName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TransferName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.TransferName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TransferName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClosingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.ClosingDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClosingDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TaxWithholdingFlag, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.TaxWithholdingFlag)
                            @Html.ValidationMessageFor(model => model.TaxWithholdingFlag, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeleteFlag, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.DeleteFlag)
                            @Html.ValidationMessageFor(model => model.DeleteFlag, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <input type="submit" value="保存" class="btn btn-success" />
                        </div>
                    </div>
                </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}